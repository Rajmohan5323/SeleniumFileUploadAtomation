/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.raj.fileupload;


import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
/**
 *
 * @author rajmo
 */
public class OperationFrame extends javax.swing.JFrame {

    /**
     * Creates new form OperationFrame
     */
    public OperationFrame() {
        this.setResizable(false);
        this.initComponents();
        final Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        final Dimension frameSize = this.getSize();
        final int x = (screenSize.width - frameSize.width) / 2;
        final int y = (screenSize.height - frameSize.height) / 2;
        this.setLocation(x, y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelMain = new javax.swing.JPanel();
        lbllogo = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        lblPacsName = new javax.swing.JLabel();
        txtPacsName = new javax.swing.JTextField();
        comboProdectType = new javax.swing.JComboBox<>();
        lblProdectType = new javax.swing.JLabel();
        comboProdect = new javax.swing.JComboBox<>();
        lblProdect = new javax.swing.JLabel();
        lblActivity = new javax.swing.JLabel();
        comboActivity = new javax.swing.JComboBox<>();
        lblSelectFile = new javax.swing.JLabel();
        txtBrowseText = new javax.swing.JTextField();
        btnBrowse = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnUpload = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        lblUserNameMsg = new javax.swing.JLabel();
        lblPasswordMsg = new javax.swing.JLabel();
        lblPacsNameMsg = new javax.swing.JLabel();
        lblProductTypeMsg = new javax.swing.JLabel();
        lblProdectMsg = new javax.swing.JLabel();
        lblActivyMsg = new javax.swing.JLabel();
        lblBrowseMsg = new javax.swing.JLabel();
        lblGeneral = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelMain.setBackground(new java.awt.Color(255, 255, 255));

        lbllogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/machintlogo.png"))); // NOI18N

        lblUserName.setText("Branch User Name");

        lblPassword.setText("Branch Password");

        txtUserName.setAutoscrolls(false);
        txtUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserNameActionPerformed(evt);
            }
        });

        txtPassword.setAutoscrolls(false);
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        lblPacsName.setText("Pacs Name");

        txtPacsName.setAutoscrolls(false);

        comboProdectType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--" , "Membership", "Deposits", "Term Deposits","Loans"}));
        comboProdectType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboProdectTypeActionPerformed(evt);
            }
        });

        lblProdectType.setText("Prodect Type");

        comboProdect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--" }));
        comboProdect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboProdectActionPerformed(evt);
            }
        });

        lblProdect.setText("Prodect");

        lblActivity.setText("Activity");

        comboActivity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--" }));

        lblSelectFile.setText("Browse the File");

        txtBrowseText.setAutoscrolls(false);
        txtBrowseText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBrowseTextActionPerformed(evt);
            }
        });

        btnBrowse.setBackground(new java.awt.Color(64, 161, 202));
        btnBrowse.setFont(new java.awt.Font("Century Schoolbook", 0, 12)); // NOI18N
        btnBrowse.setForeground(new java.awt.Color(255, 255, 255));
        btnBrowse.setText("Browse");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        btnUpload.setBackground(new java.awt.Color(64, 161, 202));
        btnUpload.setFont(new java.awt.Font("Century Schoolbook", 0, 12)); // NOI18N
        btnUpload.setForeground(new java.awt.Color(255, 255, 255));
        btnUpload.setText("Uplaod");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        btnLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/50.png"))); // NOI18N
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMainLayout = new javax.swing.GroupLayout(panelMain);
        panelMain.setLayout(panelMainLayout);
        panelMainLayout.setHorizontalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMainLayout.createSequentialGroup()
                        .addComponent(lbllogo, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMainLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelMainLayout.createSequentialGroup()
                        .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblProdectType, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblPacsName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblPassword, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblProdect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblUserName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblSelectFile, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblActivity, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUserName)
                            .addComponent(txtPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPacsName, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(comboProdectType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboProdect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboActivity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtBrowseText)
                            .addGroup(panelMainLayout.createSequentialGroup()
                                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelMainLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panelMainLayout.createSequentialGroup()
                                                .addComponent(lblBrowseMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(lblUserNameMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblProductTypeMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblProdectMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblActivyMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(lblPasswordMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPacsNameMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        panelMainLayout.setVerticalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbllogo)
                    .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUserName)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblUserNameMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPasswordMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPacsName)
                    .addComponent(txtPacsName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPacsNameMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblProdectType, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboProdectType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblProductTypeMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboProdect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProdect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblProdectMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboActivity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblActivity))
                .addGap(8, 8, 8)
                .addComponent(lblActivyMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSelectFile)
                    .addComponent(txtBrowseText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBrowse)
                    .addComponent(lblBrowseMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUpload)
                    .addComponent(lblGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(panelMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboProdectTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboProdectTypeActionPerformed
        // TODO add your handling code here:
        if(comboProdectType.getSelectedItem().equals("Membership")){
            comboProdect.removeAllItems();
            comboActivity.setSelectedItem(null);
            comboProdect.addItem("--Select--");          
            comboProdect.addItem("Customer");
        }
        
        if(comboProdectType.getSelectedItem().equals("Deposits")){
            comboProdect.removeAllItems();
            comboProdect.addItem("--Select--");
            comboProdect.addItem("Saving Deposits");
            comboProdect.addItem("Thrift Deposits");
            comboProdect.addItem("Staff Security Deposit SB");
            comboProdect.addItem("JLG Saving Deposits");
            comboProdect.addItem("SHG Saving Deposits");
            comboProdect.addItem("PF SB Account");
            comboProdect.addItem("Saving Deposit Spl LSB");
            comboProdect.addItem("SB PACS PF Contribution");
            comboProdect.addItem("Locker Deposit SB");            
            comboProdect.addItem("Current Deposits");
            comboProdect.addItem("Staff Saving Deposits");
            comboProdect.addItem("Maturity Deposit FD");
            comboProdect.addItem("Maturity Deposit RD");
         }
        if(comboProdectType.getSelectedItem().equals("Term Deposits")){
            comboProdect.removeAllItems();
            comboProdect.addItem("--Select--");
            comboProdect.addItem("Term Deposit Cummulative");
            comboProdect.addItem("Recurring Deposits");
            comboProdect.addItem("Term Deposit Non Cummulative");
           
        }
        if(comboProdectType.getSelectedItem().equals("Loans")){
            comboProdect.removeAllItems();
            comboProdect.addItem("--Select--");
            comboProdect.addItem("Normal KCC");
            comboProdect.addItem("KCC Big");
            comboProdect.addItem("KCCSmall");
            comboProdect.addItem("Long Term Agri Loans");
            comboProdect.addItem("Medium Term Agri Loans");
            comboProdect.addItem("Gold Loan Simple");
            comboProdect.addItem("Agri Gold Loan Simple");
            comboProdect.addItem("Personal Loan");
            comboProdect.addItem("FD Loan");
            comboProdect.addItem("RD Loan");
            comboProdect.addItem("SPL Gold Loan");
            comboProdect.addItem("VJL Gold Loan");
            comboProdect.addItem("Covid Gold Loan");
            comboProdect.addItem("SHG LOANS");
            comboProdect.addItem("Self Help Group Loans");
            comboProdect.addItem("Housing Loans");
            comboProdect.addItem("Pledge Loans");
            comboProdect.addItem("Staff Loans");
            comboProdect.addItem("Other Loans");
            comboProdect.addItem("SHG TABCEDCO");
            comboProdect.addItem("KCC WORKING CAPITAL LOAN");
            comboProdect.addItem("Joint Liability");
            comboProdect.addItem("KCC Animal Husbandary");
            comboProdect.addItem("Personal Loan");
            comboProdect.addItem("Self Help Group Loans - MT");
            comboProdect.addItem("Handicapped Loan");
            comboProdect.addItem("Milch Loan");
            comboProdect.addItem("Consumer Loan");
            comboProdect.addItem("Non Agriculture Other Loan");
            comboProdect.addItem("Consumer Loan Others");
            comboProdect.addItem("JLG ST Loan");
            comboProdect.addItem("Vehicle Loans - Term Loan");
            comboProdect.addItem("Micro Credit Loan Term");
            comboProdect.addItem("Medium Term Non Agri Loans");
            comboProdect.addItem("Mortgage Loan OL");
            comboProdect.addItem("House Mortgage Loan OL");
            comboProdect.addItem("Provident Fund Loan OL");
            comboProdect.addItem("Share Capital Loan OL");
            comboProdect.addItem("Tabcedco Loan OL");
            comboProdect.addItem("Thadco Loan OL");
            comboProdect.addItem("ISB Loan OL");
            comboProdect.addItem("Tamco Loan");
            comboProdect.addItem("Long Term Non Agri Loans");
            comboProdect.addItem("Covid19");
            comboProdect.addItem("Animal Husbandary OL");
            comboProdect.addItem("Marriage Loan");
            comboProdect.addItem("Manure Loans");
            comboProdect.addItem("Petty Loans");           
        }
        
    }//GEN-LAST:event_comboProdectTypeActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        try {
         this.dispose();
         ConnectionFrame cf = new ConnectionFrame();
         cf.setVisible(true);
      } catch (Exception var4) {
         Logger.getLogger(OperationFrame.class.getName()).log(Level.SEVERE, (String)null, var4);
      }
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void txtUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameActionPerformed

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
      this.txtBrowseText.setText("");
      JFileChooser fileChooserRestore = new JFileChooser();
      fileChooserRestore.showOpenDialog(this.jPanel1);
      File fileLocation = fileChooserRestore.getSelectedFile();
      if (fileLocation != null) {
         this.txtBrowseText.setText(fileLocation.getAbsolutePath().toString());
      }     
    }//GEN-LAST:event_btnBrowseActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private static void selectOption(WebElement dropdown, String optionText) {
        Select select = new Select(dropdown);
        select.selectByVisibleText(optionText);
    }
    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        // TODO add your handling code here:
        if(validateData()){
        System.setProperty("webdriver.chrome.driver", "src\\main\\java\\com\\raj\\fileupload\\driver\\chromedriver.exe");
        WebDriver driver = new ChromeDriver();
        driver.manage().window().maximize();
        driver.get("https://tnbulk.unitetools.in/?controllername=BulkUploads&actionname=ExcelTemplates&areaname=Utilities");

        // Login
        driver.findElement(By.id("user")).sendKeys(txtUserId);
        driver.findElement(By.id("pwd")).sendKeys(txtPass);
         try{
        driver.findElement(By.id("btnvalidatelogin")).click();
         }catch(NoSuchElementException e){
             System.out.println("Error: " + e.getMessage());
             this.lblUserNameMsg.setText("<html><font color='red'>Error: " + e.getMessage() + "</font></html>");
         }
         
        // Click on 'Excel Upload' link
        try{
        WebElement excelUploadLink = driver.findElement(By.linkText("Excel Upload"));
         
       excelUploadLink.click();
          }catch(NoSuchElementException e){
             System.out.println("Error"+e.getMessage());
             this.lblUserNameMsg.setText("<html><font color='red'>Error: " + e.getMessage() + "</font></html>");
          }
        System.out.println("Clicked on the 'Excel Upload' link");

        // Wait for dropdowns to be clickable
        WebDriverWait wait = new WebDriverWait(driver, 10);
       wait.until(ExpectedConditions.elementToBeClickable(By.id("ddlpacsid")));

        // Select options from dropdowns
        
          selectOption(driver.findElement(By.id("ddlpacsid")),txtpacsname);
        wait.until(ExpectedConditions.elementToBeClickable(By.id("ddlproducttypeid")));
        selectOption(driver.findElement(By.id("ddlproducttypeid")), cmbProductType);

        // Select 'Customer' from the dropdown with id 'ddlmoduleid'
      //  WebDriverWait wait2 = new WebDriverWait(driver, 10);
         WebElement moduleNameDropdown = wait.until(ExpectedConditions.elementToBeClickable(By.id("ddlmoduleid")));
        moduleNameDropdown.click();
        
         WebElement customerOption = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//select[@id='ddlmoduleid']/option[text()='"+cmbProduct+"']")));
        customerOption.click();

       
        
        WebElement activityDropdown = wait.until(ExpectedConditions.elementToBeClickable(By.id("ddlactivitylist")));
        activityDropdown.click();
        
        
         WebElement personalDetailsOption = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//select[@id='ddlactivitylist']/option[text()='"+cmbActivity+"']")));
        personalDetailsOption.click();
     
        
       // wait.until(ExpectedConditions.elementToBeClickable(By.id("ddlmoduleid")));
       // selectOption(driver.findElement(By.id("ddlmoduleid")), "Customer");
        
       // wait.until(ExpectedConditions.elementToBeClickable(By.id("ddlactivitylist")));
       // selectOption(driver.findElement(By.id("ddlactivitylist")), "Personal Details"); 
     
        wait.until(ExpectedConditions.elementToBeClickable(By.id("ddlaction")));
        selectOption(driver.findElement(By.id("ddlaction")), "Upload Excel Data");

        // Upload Excel file
         WebElement uploadElement = driver.findElement(By.id("excelfile"));
         uploadElement.sendKeys(browseText);
         
       //  WebElement processButton = driver.findElement(By.id("btnprocess"));
       //  processButton.click();
 
       WebElement errorMessageLabel1 = driver.findElement(By.id("lblerrormessage"));
      String errorMessage1 = errorMessageLabel1.getText();
          System.out.println("Error Message: " + errorMessage1);
       // System.out.println("Excel file uploaded successfully");

        // Close the browser
        //driver.quit();
            
        }
    }//GEN-LAST:event_btnUploadActionPerformed

    private void txtBrowseTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBrowseTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBrowseTextActionPerformed

    private void comboProdectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboProdectActionPerformed
        // TODO add your handling code here:
        //Customer
       
        
          if (comboProdect.getSelectedItem() != null && comboProdect.getSelectedItem().equals("Customer")) {
        // Remove all existing items and add new items
        comboActivity.removeAllItems();
        comboActivity.addItem("--Select--");
        comboActivity.addItem("Land Details");
        comboActivity.addItem("Personal Details");
    }
    else if (comboProdect.getSelectedItem() != null && comboProdect.getSelectedItem().equals("Saving Deposits")) {
        // Check if SB Application Details is already present before adding it
        if (comboActivity.getItemCount() == 0 || !comboActivity.getItemAt(0).equals("--Select--")) {
            comboActivity.removeAllItems();
            comboActivity.addItem("--Select--");
            comboActivity.addItem("SB Application Details");
        }
    }  
            
        /*
        //Deposits
        if(comboProdect.getSelectedItem().equals("Saving Deposits")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("SB Application Details");
        }
        else if(comboProdect.getSelectedItem().equals("Thrift Deposits")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("SB Application Details");
        }
        else if(comboProdect.getSelectedItem().equals("Staff Security Deposit SB")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("SB Application Details");
        }
        else if(comboProdect.getSelectedItem().equals("JLG Saving Deposits")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("SB Application Details");
        }
        else if(comboProdect.getSelectedItem().equals("SHG Saving Deposits")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("SB Application Details");
        }
        else if(comboProdect.getSelectedItem().equals("PF SB Account")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("SB Application Details");
        }
        else if(comboProdect.getSelectedItem().equals("Saving Deposit Spl LSB")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("SB Application Details");
        }
        else if(comboProdect.getSelectedItem().equals("SB PACS PF Contribution")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("SB Application Details");
        }
        else if(comboProdect.getSelectedItem().equals("Locker Deposit SB")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("SB Application Details");
        }
        else if(comboProdect.getSelectedItem().equals("Current Deposits")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("SB Application Details");
        }
        else if(comboProdect.getSelectedItem().equals("Staff Saving Deposits")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("SB Application Details");
        }
        
        else if(comboProdect.getSelectedItem().equals("Term Deposit Cummulative")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("FD Cumulative");
        }
        else if(comboProdect.getSelectedItem().equals("Recurring Deposits")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Recurring Deposits");
        }
        else if(comboProdect.getSelectedItem().equals("Term Deposit Non Cummulative")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("FD Non-Cumulative");
        }
        else if(comboProdect.getSelectedItem().equals("Normal KCC")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Short Term Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Normal KCC")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Short Term Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("KCC Big")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Short Term Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("KCCSmall")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Short Term Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Long Term Agri Loans")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Term Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Medium Term Agri Loans")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Term Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Vehicle Loans - Term Loan")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Term Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Micro Credit Loan Term")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Term Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Medium Term Non Agri Loans")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Term Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Long Term Non Agri Loans")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Term Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Gold Loan Simple")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Agri Gold Loan Simple")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Personal Loan")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("FD Loan")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("RD Loan")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("SPL Gold Loan")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("VJL Gold Loan")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Covid Gold Loan")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("SHG LOANS")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Self Help Group Loans")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Housing Loans")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Pledge Loans")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Staff Loans")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Other Loans")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("SHG TABCEDCO")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("KCC WORKING CAPITAL LOAN")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }    
        else if(comboProdect.getSelectedItem().equals("Joint Liability")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("KCC Animal Husbandary")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Personal Loan")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Self Help Group Loans - MT")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Handicapped Loan")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Milch Loan")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Consumer Loan")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Non Agriculture Other Loan")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Consumer Loan Others")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("JLG ST Loan")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Mortgage Loan OL")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("House Mortgage Loan OL")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Provident Fund Loan OL")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Share Capital Loan OL")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Tabcedco Loan OL")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Thadco Loan OL")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("ISB Loan OL")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Tamco Loan")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Covid19")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Animal Husbandary OL")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Marriage Loan")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Manure Loans")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }
        else if(comboProdect.getSelectedItem().equals("Petty Loans")){
            comboProdect.removeAllItems();        
            comboActivity.setSelectedItem("--Select--");
            comboActivity.addItem("Other Loan Applications");
        }        
        */

        
    }//GEN-LAST:event_comboProdectActionPerformed

    private boolean validateData() 
    {
        boolean flag = false;
          if (this.txtUserName.getText().isEmpty()) 
          {
              System.out.println("User"+this.txtUserName.getText());
          this.lblUserNameMsg.setText("<html><p color=red >Branch Username is empty</p></html>");
          flag = false;
          }
          else if (String.copyValueOf(this.txtPassword.getPassword()).isEmpty()) 
          {
              System.out.println("Pass"+ txtPassword);
          this.lblPasswordMsg.setText("<html><p color=red >Branch Password field is empty</p></html>");
          flag = false;
          }
          else if (this.txtPacsName.getText().isEmpty()) 
          {
              System.out.println("pacs"+txtpacsname);
          this.lblPacsNameMsg.setText("<html><p color=red >Pacs Name field is empty</p></html>");
          flag = false;
          }
          else if (this.comboProdectType.getSelectedItem().toString().isEmpty()) 
          {
              System.out.println("typee"+cmbProductType);
          this.lblProductTypeMsg.setText("<html><p color=red >Prodect Type field is empty</p></html>");
          flag = false;
          }
          else if (this.comboProdect.getSelectedItem().toString().isEmpty())
          {
              System.out.println("Pro"+cmbProduct);
          this.lblProdectMsg.setText("<html><p color=red >Prodect field is empty</p></html>");
          flag = false;
          }
          else if (this.comboActivity.getSelectedItem().toString().isEmpty())
          {
              System.out.println("Activity"+cmbActivity);
          this.lblActivyMsg.setText("<html><p color=red >Activity field is empty</p></html>");
          flag = false;
          }
          else if (this.txtBrowseText.getText().isEmpty()) 
          {
              System.out.println("Brow"+browseText);
          this.lblBrowseMsg.setText("<html><p color=red >Browse the file</p></html>");
          flag = false;
          }
          else{
                txtUserId = this.txtUserName.getText();
                txtPass = String.copyValueOf(this.txtPassword.getPassword());
                txtpacsname = this.txtPacsName.getText();
                cmbProductType = this.comboProdectType.getSelectedItem().toString();
                cmbProduct = this.comboProdect.getSelectedItem().toString();
                cmbActivity = this.comboActivity.getSelectedItem().toString();
                browseText = this.txtBrowseText.getText();
                
               flag = (txtUserId != null && !txtUserId.isEmpty() && !txtUserId.trim().equals("a") 
                       && txtPass != null && !txtPass.isEmpty() && !txtPass.trim().equals("")
                       && txtpacsname != null && !txtpacsname.isEmpty() && !txtpacsname.trim().equals("")
                       && cmbProductType != null && !cmbProductType.isEmpty() && !cmbProductType.trim().equals("")
                       && cmbProduct != null && !cmbProduct.isEmpty() && !cmbProduct.trim().equals("")
                       && cmbActivity != null && !cmbActivity.isEmpty() && !cmbActivity.trim().equals("")
                       && browseText != null && !browseText.isEmpty() && !browseText.trim().equals("")
                       );
               System.out.println("flag--->"+flag);
                if(flag == false)
                {
                 this.lblGeneral.setText("<html><p color=red >Please Check Your Credentials</p></html>");
                }
                this.lblUserNameMsg.setText("");
                this.lblPasswordMsg.setText("");
                this.lblPacsNameMsg.setText("");
                this.lblProductTypeMsg.setText("");
                this.lblProdectMsg.setText("");
                this.lblActivyMsg.setText("");
                this.lblBrowseMsg.setText("");
            }   
        return flag;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OperationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OperationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OperationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OperationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new OperationFrame().setVisible(true);
            }
        });
    }
    public static String txtUserId ;
    public static String txtPass;
    public static String txtpacsname ;
    public static String cmbProductType ;
    public static String cmbProduct ;
    public static String cmbActivity ;
    public static String browseText ;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnUpload;
    private javax.swing.JComboBox<String> comboActivity;
    private javax.swing.JComboBox<String> comboProdect;
    private javax.swing.JComboBox<String> comboProdectType;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblActivity;
    private javax.swing.JLabel lblActivyMsg;
    private javax.swing.JLabel lblBrowseMsg;
    private javax.swing.JLabel lblGeneral;
    private javax.swing.JLabel lblPacsName;
    private javax.swing.JLabel lblPacsNameMsg;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPasswordMsg;
    private javax.swing.JLabel lblProdect;
    private javax.swing.JLabel lblProdectMsg;
    private javax.swing.JLabel lblProdectType;
    private javax.swing.JLabel lblProductTypeMsg;
    private javax.swing.JLabel lblSelectFile;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JLabel lblUserNameMsg;
    private javax.swing.JLabel lbllogo;
    private javax.swing.JPanel panelMain;
    private javax.swing.JTextField txtBrowseText;
    private javax.swing.JTextField txtPacsName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
